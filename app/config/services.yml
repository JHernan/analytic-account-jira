# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    AppBundle\Handler\ProjectHandler:
        public: true
        arguments:
            $projectManager: '@AppBundle\Manager\ProjectManager'
            $componentManager: '@AppBundle\Manager\ComponentManager'
            $versionManager: '@AppBundle\Manager\VersionManager'
            $issueTypeManager: '@AppBundle\Manager\IssueTypeManager'
            $projectService: '@JiraRestApi\Project\ProjectService'
            $key: '%project_key%'

    AppBundle\Handler\IssueHandler:
        public: true
        arguments:
            $issueManager: '@AppBundle\Manager\IssueManager'
            $issueService: '@JiraRestApi\Issue\IssueService'


    AppBundle\Manager\ProjectManager:
        public: true
        arguments:
            $em: '@doctrine.orm.default_entity_manager'

    AppBundle\Manager\ComponentManager:
        public: true
        arguments:
            $em: '@doctrine.orm.default_entity_manager'

    AppBundle\Manager\VersionManager:
        public: true
        arguments:
            $em: '@doctrine.orm.default_entity_manager'

    AppBundle\Manager\IssueManager:
        public: true
        arguments:
            $em: '@doctrine.orm.default_entity_manager'
            $issueTypeManager: '@AppBundle\Manager\IssueTypeManager'
            $componentManager: '@AppBundle\Manager\ComponentManager'
            $versionManager: '@AppBundle\Manager\VersionManager'

    AppBundle\Manager\IssueTypeManager:
        public: true
        arguments:
            $em: '@doctrine.orm.default_entity_manager'


    AppBundle\Command\LoadIssuesCommand:
        public: true
        arguments:
            $issueHandler: '@AppBundle\Handler\IssueHandler'


    # Services JiraRestAPI
    JiraRestApi\Project\ProjectService:
        public: true
    JiraRestApi\Issue\IssueService:
        public: true